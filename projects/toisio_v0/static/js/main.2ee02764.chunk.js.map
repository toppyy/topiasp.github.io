{"version":3,"sources":["components/Selectable.js","utils/toisio.js","components/Result.js","components/StepExplanations.js","components/LeftToRight.js","App.js","index.js"],"names":["Selectable","options","disabled","selected","onSelect","idx","activeSelection","possibleCombinations","Array","isArray","Card","Group","horizontal","map","opt","color","isValidCombination","find","combo","key","uuidv4","Button","size","onClick","combinations","findOptions","combination","reduce","t","c","includes","concat","numberOfOptions","length","Result","ResultText","Header","as","icon","Icon","name","style","Subheader","StepExplanations","Step","fluid","title","description","step","isCompleted","isActive","isDisabled","completed","active","Content","Title","Description","LeftToRight","useState","setActiveSelection","setSelected","result","setResult","setPossibleCombinations","value","copySelected","slice","combos","desiredValue","res","comboIndex","shift","filter","findCombinations","console","log","Grid","Row","columns","Column","Segment","padded","stretched","App","Container","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2ee02764.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, Card } from 'semantic-ui-react'\r\nimport  uuidv4  from 'uuid/v4'\r\n\r\n\r\nconst Selectable = ({ options, disabled, selected, onSelect, idx, activeSelection, possibleCombinations }) => {\r\n\r\n\r\n    if (!Array.isArray(options)) {\r\n        return('')\r\n    }\r\n\r\n\r\n    return(\r\n        <Card.Group horizontal=\"true\">\r\n            \r\n            {\r\n                options.map(opt => {\r\n\r\n                    const color = selected === opt ? 'green' : 'blue'\r\n\r\n                    const isValidCombination = possibleCombinations.find(combo => combo[idx] === opt) ? true : false\r\n\r\n                    return(\r\n                        <Card key={ uuidv4() }>\r\n                            <Button size={'large'} color={color} disabled={ disabled | ( !isValidCombination  && idx === activeSelection) } onClick={() => onSelect(opt)}>\r\n                                {opt}\r\n                            </Button>\r\n                        </Card>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </Card.Group>\r\n    )\r\n}\r\n\r\n\r\nexport default Selectable","export const combinations =  [\r\n    [\"Tutkija\",\"Yksilötaso\",\"Etuustiedot, vain Kelan tietoja\",\"Tieteellinen tutkimus\",\"Tietolupa / Kela\",\"käyttöympäristöön\"],\r\n    [\"Tutkija\",\"Yksilötaso\",\"Etuustiedot, Kelan ja muita sotetietoja\",\"Tieteellinen tutkimus\",\"Tietolupa/ Findata\",\"Findatalle\"],\r\n    [\"Tutkija\",\"Yksilötaso\",\"Etuustiedot ja ei sote-tietoja (esim. vero) \",\"Tieteellinen tutkimus\",\"Tietolupa / Kela\",\"käyttöympäristöön\"],\r\n    [\"Tutkija\",\"Yksilötaso\",\"Reseptitiedot, ei muita tietoja\",\"Tieteellinen tutkimus\",\"Tietolupa/ Kela\",\"käyttöympäristöön\"],\r\n    [\"Tutkija\",\"Yksilötaso\",\"Reseptiedot ja muita sotetietoja\",\"Tieteellinen tutkimus\",\"Tietolupa/ Findata\",\"Findatalle\"],\r\n    [\"Tutkija\",\"Tilasto\",\"Etuustiedot, vain Kelan tietoja\",\"Tieteellinen tutkimus\",\"tietopyyntöpäätös/ Kela\",\"Findatalle\"],\r\n    [\"Tutkija\",\"Tilasto\",\"Etuustiedot, Kelan ja muita sotetietoja\",\"Tieteellinen tutkimus\",\"tietopyyntöpäätös/ Findata\",\"Findatalle\"],\r\n    [\"Tutkija\",\"Tilasto\",\"Etuustiedot, Kelan ja ei sote-tietoja (esim. Vero) \",\"Tieteellinen tutkimus\",\"tietopyyntöpäätös/ Kela\",\"Findatalle\"],\r\n    [\"Tutkija\",\"Tilasto\",\"Reseptitiedot, ei muita tietoja\",\"Tieteellinen tutkimus\",\"tietopyyntöpäätös/ Kela\",\"Findatalle\"],\r\n    [\"Tutkija\",\"Tilasto\",\"Reseptiedot ja muita sotetietoja\",\"Tieteellinen tutkimus\",\"tietopyyntöpäätös/ Findata\",\"Findatalle\"],\r\n    [\"Kelan ulkopuolinen\",\"Tilasto\",\"Reseptitiedot ja Kelan etuustietoja\",\"Kehittämis- ja innovaatiotoiminta\",\"tietopyyntöpäätös/ Findata\",\"Findatalle\"]\r\n]    \r\n\r\nexport const findOptions = idx => {\r\n    return combinations.map(combination => combination[idx]).reduce((t,c) => t.includes(c) ? t : t.concat(c) ,[])\r\n}\r\n\r\nexport const numberOfOptions = combinations[0].length - 2\r\n\r\n\r\nexport const findCombinations = (combos) => {\r\n\r\n\r\n    let res = [...combinations]\r\n    let desiredValue\r\n    let comboIndex = 0\r\n    while (combos.length>0) {\r\n        desiredValue = combos.shift()\r\n        res = res.filter(combination => combination[comboIndex] === desiredValue  )\r\n        comboIndex = comboIndex +1 \r\n    }\r\n\r\n    return res\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Icon, Grid, Header } from 'semantic-ui-react'\r\n\r\n\r\nconst Result = ({ ResultText }) => {\r\n\r\n    if (!ResultText) {\r\n        return('')\r\n    }\r\n\r\n    const style = { color: '#21ba45' }\r\n\r\n    return(\r\n        <Header as='h2' icon  >\r\n            <Icon name='hand point down outline'  style={style}/>\r\n            <div style={{}}>\r\n                { ResultText }\r\n            </div>\r\n            <Header.Subheader>\r\n            </Header.Subheader>\r\n        </Header>\r\n    )\r\n    \r\n}\r\n\r\nexport default Result","import React from 'react'\r\n\r\nimport { Step, Icon} from 'semantic-ui-react'\r\n\r\n\r\nconst StepExplanations = ({ activeSelection }) => {\r\n\r\n    const steps = [\r\n        { title: 'Tilaaja', description: 'Tilaajatyyppi', icon: 'user' },\r\n        { title: 'Taso', description: 'Tilasto vai yksilötason aineisto', icon: 'chart bar' },\r\n        { title: 'Aineistot', description: 'Vain Kelan rekisteriaineistoja?', icon: 'database' },\r\n        { title: 'Käyttötarkoitus', description: 'Tietojen käyttötarkoitus?', icon: 'law' },\r\n        { title: 'Lupapäätös', description: '', icon: 'gavel' },\r\n    ]\r\n\r\n    return(\r\n        <Step.Group fluid  size='mini'>\r\n        \r\n        {\r\n            steps.map((step,idx) => {\r\n                const isCompleted = idx < activeSelection\r\n                const isActive = idx === activeSelection\r\n                const isDisabled = !isCompleted && !isActive\r\n\r\n                return(\r\n                    <Step completed={isCompleted} active={isActive} disabled={isDisabled}>\r\n                        <Icon name={ step.icon } />\r\n                        <Step.Content>\r\n                            <Step.Title>{ step.title }</Step.Title>\r\n                            <Step.Description>{ step.description }</Step.Description>\r\n                        </Step.Content>\r\n                    </Step>\r\n                )\r\n            })\r\n        }\r\n\r\n\r\n      \r\n      </Step.Group>\r\n    )\r\n}\r\n\r\nexport default StepExplanations","import React, { useState } from 'react'\r\nimport Selectable from './Selectable'\r\nimport { Grid, Card, Segment } from 'semantic-ui-react'\r\nimport { findOptions, findCombinations, combinations, numberOfOptions } from '../utils/toisio'\r\n\r\nimport  uuidv4  from 'uuid/v4'\r\nimport Result from './Result'\r\nimport StepExplanations from './StepExplanations'\r\n\r\nconst LeftToRight = () => {\r\n\r\n    const [activeSelection, setActiveSelection] = useState(0)\r\n    const [selected,setSelected] = useState([])\r\n    const [result,setResult] = useState(null)\r\n    const [possibleCombinations,setPossibleCombinations] = useState(combinations)\r\n\r\n\r\n\r\n    const onSelect = (value,idx) => {\r\n        let copySelected = [...selected]\r\n        copySelected[idx] = value\r\n        copySelected = copySelected.slice(0,idx+1)\r\n        setSelected( copySelected )\r\n        setActiveSelection(  copySelected.length   )\r\n        setPossibleCombinations(findCombinations([...copySelected]))\r\n\r\n        // \r\n        if (idx === (numberOfOptions-1)) {\r\n            console.log('resulting')\r\n            setResult( possibleCombinations[0][numberOfOptions] )\r\n        } else {\r\n            setResult(null)\r\n        }\r\n    }\r\n\r\n    console.log('possibleCmbo', possibleCombinations, selected , activeSelection, numberOfOptions)\r\n\r\n    return(\r\n        <Grid>\r\n\r\n            <Grid.Row>\r\n            <StepExplanations activeSelection={activeSelection} />\r\n            </Grid.Row>\r\n                \r\n            <Grid.Row>\r\n                <Grid columns={5}>\r\n                    {\r\n                        [0,1,2,3].map(idx => {\r\n\r\n                            return(\r\n                                                            \r\n                            <Grid.Column>\r\n                                <Segment padded>\r\n                                    <Selectable\r\n                                        idx = {idx}\r\n                                        activeSelection={activeSelection}\r\n                                        possibleCombinations={possibleCombinations}\r\n                                        key={ uuidv4() }\r\n                                        selected={ selected[idx] }\r\n                                        options={ findOptions(idx) }\r\n                                        disabled={ idx > activeSelection }\r\n                                        onSelect={ (value) => onSelect(value,idx) } /> \r\n                                </Segment>\r\n                            \r\n                            </Grid.Column>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                    <Grid.Column>\r\n                    <Grid.Row stretched>\r\n                        \r\n                            <Result ResultText={result}></Result>  \r\n                        \r\n                    </Grid.Row>\r\n\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Grid.Row>\r\n        </Grid>\r\n            \r\n    )\r\n\r\n}\r\n\r\n\r\nexport default LeftToRight","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\nimport LeftToRight from './components/LeftToRight'\nimport { Grid, Container } from 'semantic-ui-react'\n\n\nconst App = () => {\n\n\n\n\n  return (\n    <Router>\n      <Container>\n        <Route path=\"/\" render={() => <LeftToRight />} />\n      </Container>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}